openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/accounts/addresses/:
    get:
      operationId: api_accounts_addresses_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
          description: ''
    post:
      operationId: api_accounts_addresses_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddressRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddressRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
  /api/accounts/addresses/{id}/:
    get:
      operationId: api_accounts_addresses_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    put:
      operationId: api_accounts_addresses_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddressRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddressRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    patch:
      operationId: api_accounts_addresses_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAddressRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAddressRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAddressRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: ''
    delete:
      operationId: api_accounts_addresses_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/accounts/change-password/:
    post:
      operationId: api_accounts_change_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChangeRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          description: Password changed successfully
        '400':
          description: Passwords do not match
  /api/accounts/login/:
    post:
      operationId: api_accounts_login_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          description: No response body
  /api/accounts/login-verify/:
    post:
      operationId: api_accounts_login_verify_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginVerifyRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          description: No response body
  /api/accounts/logout/:
    post:
      operationId: api_accounts_logout_create
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/accounts/password-reset/:
    post:
      operationId: api_accounts_password_reset_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          description: Reset password email sent successfully
        '400':
          description: User not found
  /api/accounts/password-reset/{uidb64}/{token}/:
    post:
      operationId: api_accounts_password_reset_create_2
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          description: No response body
  /api/accounts/token/refresh/:
    post:
      operationId: api_accounts_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/accounts/users/:
    get:
      operationId: api_accounts_users_list
      description: Retrieve the list of all registered users.
      summary: List all users
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShopUser'
          description: ''
    post:
      operationId: api_accounts_users_create
      description: Register a new user with the provided details.
      summary: Create a new user
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                DuplicateUsername:
                  value:
                    error: Shop User with this username already exists.
                  summary: Duplicate username
                DuplicateEmail:
                  value:
                    error: Shop User with this email already exists.
                  summary: Duplicate email
                PhoneLength:
                  value:
                    error: Phone number must be 11 digits.
                  summary: Phone length
          description: ''
  /api/accounts/users/{id}/:
    get:
      operationId: api_accounts_users_retrieve
      description: Fetch details of a user with the given ID.
      summary: Retrieve a specific user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: ID of the user to retrieve
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopUserDetail'
          description: ''
    put:
      operationId: api_accounts_users_update
      description: Update the details of an existing user.
      summary: Update user details
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                DuplicateUsername:
                  value:
                    error: Shop User with this username already exists.
                  summary: Duplicate username
                DuplicateEmail:
                  value:
                    error: Shop User with this email already exists.
                  summary: Duplicate email
                PhoneLength:
                  value:
                    error: Phone number must be 11 digits.
                  summary: Phone length
          description: ''
    patch:
      operationId: api_accounts_users_partial_update
      description: Update a subset of fields for an existing user.
      summary: Partially update user details
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRegistrationRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                DuplicateUsername:
                  value:
                    error: Shop User with this username already exists.
                  summary: Duplicate username
                DuplicateEmail:
                  value:
                    error: Shop User with this email already exists.
                  summary: Duplicate email
                PhoneLength:
                  value:
                    error: Phone number must be 11 digits.
                  summary: Phone length
          description: ''
    delete:
      operationId: api_accounts_users_destroy
      description: Delete an existing user by their ID.
      summary: Delete a user
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No Content
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
              examples:
                InvalidID:
                  value:
                    error: No user found with the given ID.
                  summary: Invalid ID
          description: ''
  /api/accounts/vendor-profiles/:
    get:
      operationId: api_accounts_vendor_profiles_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VendorProfile'
          description: ''
    post:
      operationId: api_accounts_vendor_profiles_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorProfile'
          description: ''
  /api/accounts/vendor-profiles/{id}/:
    get:
      operationId: api_accounts_vendor_profiles_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorProfile'
          description: ''
    put:
      operationId: api_accounts_vendor_profiles_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorProfile'
          description: ''
    patch:
      operationId: api_accounts_vendor_profiles_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVendorProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVendorProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVendorProfileRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorProfile'
          description: ''
    delete:
      operationId: api_accounts_vendor_profiles_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/accounts/vendor-profiles/{id}/approve/:
    post:
      operationId: api_accounts_vendor_profiles_approve_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorProfile'
          description: ''
  /api/accounts/vendor-profiles/{id}/reject/:
    post:
      operationId: api_accounts_vendor_profiles_reject_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VendorProfileRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorProfile'
          description: ''
  /api/cart/:
    get:
      operationId: api_cart_list
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
          description: ''
        '400':
          description: No cart found
  /api/cart/add/:
    post:
      operationId: api_cart_add_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartActionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartActionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartActionRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          description: Added to cart
        '400':
          description: No product found
  /api/cart/apply_discount/:
    post:
      operationId: api_cart_apply_discount_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiscountRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
        '400':
          description: No discount found
  /api/cart/clear/:
    post:
      operationId: api_cart_clear_create
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          description: Cart cleared
  /api/cart/decrease/:
    post:
      operationId: api_cart_decrease_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartActionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartActionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartActionRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          description: Product decreased
        '400':
          description: No product found
  /api/cart/remove/:
    post:
      operationId: api_cart_remove_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartActionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CartActionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CartActionRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          description: Product removed
        '400':
          description: No product found
  /api/orders/create/:
    post:
      operationId: api_orders_create_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/orders/payment/callback/:
    post:
      operationId: api_orders_payment_callback_create
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/orders/subscription/:
    post:
      operationId: api_orders_subscription_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/shop/vendor-products/:
    get:
      operationId: api_shop_vendor_products_list
      parameters:
      - in: query
        name: category
        schema:
          type: string
      - in: query
        name: vendor
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: api_shop_vendor_products_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreate'
          description: ''
  /api/shop/vendor-products/{id}/:
    get:
      operationId: api_shop_vendor_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_shop_vendor_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_shop_vendor_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_shop_vendor_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Address:
      type: object
      properties:
        street:
          type: string
          maxLength: 50
        city:
          type: string
          maxLength: 50
        state:
          type: string
          maxLength: 50
        country:
          type: string
          maxLength: 50
        zip_code:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_default:
          type: boolean
      required:
      - city
      - country
      - state
      - street
      - zip_code
    AddressRequest:
      type: object
      properties:
        street:
          type: string
          minLength: 1
          maxLength: 50
        city:
          type: string
          minLength: 1
          maxLength: 50
        state:
          type: string
          minLength: 1
          maxLength: 50
        country:
          type: string
          minLength: 1
          maxLength: 50
        zip_code:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_default:
          type: boolean
      required:
      - city
      - country
      - state
      - street
      - zip_code
    Cart:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
        discount_amount:
          type: integer
        post_price:
          type: integer
        total_price:
          type: integer
        final_price:
          type: integer
      required:
      - discount_amount
      - final_price
      - items
      - post_price
      - total_price
    CartActionRequest:
      type: object
      properties:
        product:
          type: integer
      required:
      - product
    CartItem:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
        quantity:
          type: integer
        price:
          type: integer
        weight:
          type: integer
      required:
      - price
      - product
      - quantity
      - weight
    Category:
      type: object
      properties:
        parent:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - name
      - parent
    CategoryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
      required:
      - name
    Discount:
      type: object
      properties:
        code:
          type: string
      required:
      - code
    DiscountRequest:
      type: object
      properties:
        code:
          type: string
          minLength: 1
      required:
      - code
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
      required:
      - username
    LoginVerifyRequest:
      type: object
      properties:
        request_id:
          type: string
          format: uuid
        password:
          type: string
          minLength: 1
      required:
      - password
      - request_id
    Order:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        phone:
          type: string
          maxLength: 11
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        discount_code:
          type: string
          nullable: true
        total_cost:
          type: string
          readOnly: true
        post_cost:
          type: string
          readOnly: true
        final_cost:
          type: string
          readOnly: true
      required:
      - created
      - final_cost
      - first_name
      - items
      - last_name
      - phone
      - post_cost
      - total_cost
      - updated
    OrderItem:
      type: object
      properties:
        order:
          type: integer
        product:
          type: integer
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        weight:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - order
      - product
    OrderItemRequest:
      type: object
      properties:
        order:
          type: integer
        product:
          type: integer
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        weight:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - order
      - product
    OrderRequest:
      type: object
      properties:
        address_id:
          type: integer
          writeOnly: true
        first_name:
          type: string
          minLength: 1
          maxLength: 50
        last_name:
          type: string
          minLength: 1
          maxLength: 50
        phone:
          type: string
          minLength: 1
          maxLength: 11
        discount_code:
          type: string
          nullable: true
      required:
      - address_id
      - first_name
      - last_name
      - phone
    PasswordChangeRequest:
      type: object
      properties:
        old_password:
          type: string
          writeOnly: true
          minLength: 1
        new_password:
          type: string
          writeOnly: true
          minLength: 1
        confirm_password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - confirm_password
      - new_password
      - old_password
    PasswordResetRequestRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
    PatchedAddressRequest:
      type: object
      properties:
        street:
          type: string
          minLength: 1
          maxLength: 50
        city:
          type: string
          minLength: 1
          maxLength: 50
        state:
          type: string
          minLength: 1
          maxLength: 50
        country:
          type: string
          minLength: 1
          maxLength: 50
        zip_code:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        is_default:
          type: boolean
    PatchedProductRequest:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/CategoryRequest'
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          minLength: 1
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
        product_picture:
          type: string
          format: binary
          nullable: true
        tags:
          type: array
          items:
            type: string
            minLength: 1
    PatchedUserRegistrationRequest:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 50
        last_name:
          type: string
          minLength: 1
          maxLength: 50
        username:
          type: string
          minLength: 1
          maxLength: 50
        phone:
          type: string
          minLength: 1
          maxLength: 11
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        password:
          type: string
          writeOnly: true
          minLength: 1
          maxLength: 128
        profile_picture:
          type: string
          format: binary
          nullable: true
    PatchedVendorProfileRequest:
      type: object
      properties:
        store_name:
          type: string
          minLength: 1
          maxLength: 50
        description:
          type: string
          nullable: true
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category:
          $ref: '#/components/schemas/Category'
        name:
          type: string
          maxLength: 100
        description:
          type: string
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
        product_picture:
          type: string
          format: uri
          nullable: true
        tags:
          type: array
          items:
            type: string
      required:
      - category
      - description
      - id
      - name
      - price
      - stock
      - tags
    ProductCreate:
      type: object
      properties:
        category:
          type: integer
        name:
          type: string
          maxLength: 100
        description:
          type: string
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
        weight:
          type: integer
          maximum: 2147483647
          minimum: 0
        product_picture:
          type: string
          format: uri
          nullable: true
        tags:
          type: array
          items:
            type: string
      required:
      - category
      - description
      - name
      - price
      - stock
      - tags
    ProductCreateRequest:
      type: object
      properties:
        category:
          type: integer
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          minLength: 1
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
        weight:
          type: integer
          maximum: 2147483647
          minimum: 0
        product_picture:
          type: string
          format: binary
          nullable: true
        tags:
          type: array
          items:
            type: string
            minLength: 1
      required:
      - category
      - description
      - name
      - price
      - stock
      - tags
    ProductRequest:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/CategoryRequest'
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          minLength: 1
        price:
          type: integer
          maximum: 2147483647
          minimum: 0
        stock:
          type: integer
          maximum: 2147483647
          minimum: 0
        product_picture:
          type: string
          format: binary
          nullable: true
        tags:
          type: array
          items:
            type: string
            minLength: 1
      required:
      - category
      - description
      - name
      - price
      - stock
      - tags
    RoleEnum:
      enum:
      - admin
      - vendor
      - customer
      type: string
      description: |-
        * `admin` - Admin
        * `vendor` - Vendor
        * `customer` - Customer
    ShopUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 50
      required:
      - first_name
      - id
    ShopUserDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        username:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          maxLength: 254
        role:
          $ref: '#/components/schemas/RoleEnum'
        is_active:
          type: boolean
        is_superuser:
          type: boolean
        is_staff:
          type: boolean
        date_joined:
          type: string
          format: date-time
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        vendor_profile:
          $ref: '#/components/schemas/VendorProfile'
      required:
      - addresses
      - email
      - first_name
      - id
      - last_name
      - username
      - vendor_profile
    StatusEnum:
      enum:
      - pending
      - approved
      - rejected
      type: string
      description: |-
        * `pending` - Pending
        * `approved` - Approved
        * `rejected` - Rejected
    Subscription:
      type: object
      properties:
        subscription_type:
          type: string
      required:
      - subscription_type
    SubscriptionRequest:
      type: object
      properties:
        subscription_type:
          type: string
          minLength: 1
      required:
      - subscription_type
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    UserRegistration:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        username:
          type: string
          maxLength: 50
        phone:
          type: string
          maxLength: 11
        email:
          type: string
          format: email
          maxLength: 254
        profile_picture:
          type: string
          format: uri
          nullable: true
      required:
      - email
      - first_name
      - last_name
      - phone
      - username
    UserRegistrationRequest:
      type: object
      properties:
        first_name:
          type: string
          minLength: 1
          maxLength: 50
        last_name:
          type: string
          minLength: 1
          maxLength: 50
        username:
          type: string
          minLength: 1
          maxLength: 50
        phone:
          type: string
          minLength: 1
          maxLength: 11
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        password:
          type: string
          writeOnly: true
          minLength: 1
          maxLength: 128
        profile_picture:
          type: string
          format: binary
          nullable: true
      required:
      - email
      - first_name
      - last_name
      - password
      - phone
      - username
    VendorProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        store_name:
          type: string
          maxLength: 50
        description:
          type: string
          nullable: true
        is_active:
          type: boolean
          readOnly: true
        user:
          type: integer
          readOnly: true
      required:
      - id
      - is_active
      - status
      - store_name
      - user
    VendorProfileRequest:
      type: object
      properties:
        store_name:
          type: string
          minLength: 1
          maxLength: 50
        description:
          type: string
          nullable: true
      required:
      - store_name
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
